{"ast":null,"code":"var _jsxFileName = \"/Users/ChenSong/Documents/GitHub/320-F20-Track-II/frontend/src/pages/components/gatheredList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider, createMuiTheme, makeStyles, List, ListItem, ListItemText, Button, Box } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n    color: \"#5b7f95\"\n  }\n}));\nconst colorChange = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#373a3c\"\n    }\n  }\n});\n\nfunction renderRow(props) {\n  const {\n    index,\n    style\n  } = props;\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    style: style,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: `Stakeholder ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired\n};\nexport default function VirtualizedList() {\n  const classes = useStyles();\n  let [showList, setShowContent] = React.useState(true);\n\n  const toggleShow = () => {\n    setShowContent(show => !show);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 6,\n    ml: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleShow,\n    color: \"primary\",\n    style: {\n      fontSize: '16px'\n    },\n    disableRipple: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Gathered Information\")), showList && /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1,\n    mb: 0.75,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    style: {\n      color: \"#373a3c\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    height: 400,\n    width: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"StakeHolder 1\")), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1,\n    mb: 0.75,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    style: {\n      color: \"#373a3c\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    height: 400,\n    width: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"StakeHolder 2\")))));\n}","map":{"version":3,"sources":["/Users/ChenSong/Documents/GitHub/320-F20-Track-II/frontend/src/pages/components/gatheredList.js"],"names":["React","PropTypes","ThemeProvider","createMuiTheme","makeStyles","List","ListItem","ListItemText","Button","Box","PersonIcon","useStyles","theme","root","width","height","maxWidth","backgroundColor","palette","background","paper","color","colorChange","primary","main","renderRow","props","index","style","propTypes","number","isRequired","object","VirtualizedList","classes","showList","setShowContent","useState","toggleShow","show","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider, createMuiTheme, makeStyles, \n          List, ListItem, ListItemText, Button, Box } \nfrom '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n    color: \"#5b7f95\"\n  },\n}));\n\nconst colorChange = createMuiTheme({\n  palette:{\n    primary:{\n      main : \"#373a3c\"\n    },\n  }\n});\n\nfunction renderRow(props) {\n  const { index, style } = props;\n\n  return (\n    <ListItem button style={style} key={index}>\n      <ListItemText primary={`Stakeholder ${index + 1}`} />\n    </ListItem>\n  );\n}\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired,\n};\n\nexport default function VirtualizedList() {\n  const classes = useStyles();\n\n  let [showList, setShowContent] = React.useState(true);\n\n  const toggleShow = () => {\n    setShowContent(show => !show)\n  };\n\n  return (\n    <div className={classes.root}>\n      <Box mt = {6} ml = {8}>\n      <ThemeProvider theme = {colorChange}>\n        <Button onClick={toggleShow} \n         color = \"primary\"\n         style = {{ fontSize: '16px'}}\n         disableRipple = \"true\"\n         >\n         Gathered Information\n         </Button>\n      </ThemeProvider>\n      {showList &&\n        <List>\n          <ListItem button>\n          <Box mr = {1} mb = {0.75}>\n            <PersonIcon style = {{ color: \"#373a3c\"}}/>\n          </Box>\n            <ListItemText height={400} width={300}>\n              StakeHolder 1\n          </ListItemText>\n          </ListItem>\n\n          <ListItem button>\n          <Box mr = {1} mb = {0.75}>\n            <PersonIcon style = {{ color: \"#373a3c\"}}/>\n          </Box>\n            <ListItemText height={400} width={300}>\n              StakeHolder 2\n          </ListItemText>\n          </ListItem>\n        </List>\n      }\n     </Box> \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}