{"ast":null,"code":"import _slicedToArray from\"/Users/ChenSong/Documents/GitHub/320-F20-Track-II/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import Chart from'chart.js';function Radar(_ref){var coverage=_ref.coverage,summary=_ref.summary;var chartContainer=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),chartInstance=_useState2[0],setChartInstance=_useState2[1];// state for input\nvar chartConfig=onChartChange(summary);useEffect(function(){if(chartContainer&&chartContainer.current){var newChartInstance=new Chart(chartContainer.current,chartConfig);setChartInstance(newChartInstance);}},[chartContainer]);return/*#__PURE__*/React.createElement(\"canvas\",{ref:chartContainer,id:\"coverage-plot\"});function colorLimit(value){if(value<1.5){return\"rgba(255, 0, 0, 0.2)\";}else if(value<2.5){return\"rgba(255, 255, 0, 0.2)\";}else{return\"rgba(0, 128, 0, 0.2)\";}}function onChartChange(input){return{type:'radar',data:{//labels: coverage.keys,\nlabels:Object.keys(coverage),datasets:[{label:\"Student A\",backgroundColor:colorLimit(input),data:Object.values(coverage)}]},options:{scale:{ticks:{beginAtZero:true,min:0,display:false}}}};}}export default Radar;","map":{"version":3,"sources":["/Users/ChenSong/Documents/GitHub/320-F20-Track-II/frontend/src/pages/chart/chart.js"],"names":["React","useEffect","useRef","useState","Chart","Radar","coverage","summary","chartContainer","chartInstance","setChartInstance","chartConfig","onChartChange","current","newChartInstance","colorLimit","value","input","type","data","labels","Object","keys","datasets","label","backgroundColor","values","options","scale","ticks","beginAtZero","min","display"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAGA,QAASC,CAAAA,KAAT,MAAoC,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CAAVC,OAAU,MAAVA,OAAU,CAChC,GAAMC,CAAAA,cAAc,CAAGN,MAAM,CAAC,IAAD,CAA7B,CADgC,cAEUC,QAAQ,CAAC,IAAD,CAFlB,wCAEzBM,aAFyB,eAEVC,gBAFU,eAGhC;AAEA,GAAMC,CAAAA,WAAW,CAAGC,aAAa,CAACL,OAAD,CAAjC,CACAN,SAAS,CAAC,UAAM,CACZ,GAAIO,cAAc,EAAIA,cAAc,CAACK,OAArC,CAA8C,CAC1C,GAAMC,CAAAA,gBAAgB,CAAG,GAAIV,CAAAA,KAAJ,CAAUI,cAAc,CAACK,OAAzB,CAAkCF,WAAlC,CAAzB,CACAD,gBAAgB,CAACI,gBAAD,CAAhB,CACH,CACJ,CALQ,CAKN,CAACN,cAAD,CALM,CAAT,CAOA,mBACI,8BACI,GAAG,CAAEA,cADT,CAEI,EAAE,CAAC,eAFP,EADJ,CAOA,QAASO,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACvB,GAAIA,KAAK,CAAG,GAAZ,CAAiB,CACb,MAAO,sBAAP,CACH,CAFD,IAGK,IAAIA,KAAK,CAAG,GAAZ,CAAiB,CAClB,MAAO,wBAAP,CACH,CAFI,IAGA,CACD,MAAO,sBAAP,CACH,CACJ,CAED,QAASJ,CAAAA,aAAT,CAAuBK,KAAvB,CAA8B,CAC1B,MAAO,CACHC,IAAI,CAAE,OADH,CAEHC,IAAI,CAAE,CACF;AACAC,MAAM,CAAEC,MAAM,CAACC,IAAP,CAAYhB,QAAZ,CAFN,CAGFiB,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,WADA,CAEPC,eAAe,CAAEV,UAAU,CAACE,KAAD,CAFpB,CAGPE,IAAI,CAAEE,MAAM,CAACK,MAAP,CAAcpB,QAAd,CAHC,CAAD,CAHR,CAFH,CAWHqB,OAAO,CAAE,CACLC,KAAK,CAAE,CACHC,KAAK,CAAE,CACHC,WAAW,CAAE,IADV,CAEHC,GAAG,CAAE,CAFF,CAGHC,OAAO,CAAE,KAHN,CADJ,CADF,CAXN,CAAP,CAqBH,CACJ,CAED,cAAe3B,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js';\n\n\nfunction Radar({coverage, summary}) {\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    // state for input\n\n    const chartConfig = onChartChange(summary)\n    useEffect(() => {\n        if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chart(chartContainer.current, chartConfig);\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer]);\n\n    return (\n        <canvas\n            ref={chartContainer}\n            id=\"coverage-plot\"\n        />\n    )\n\n    function colorLimit(value) {\n        if (value < 1.5) {\n            return \"rgba(255, 0, 0, 0.2)\"\n        }\n        else if (value < 2.5) {\n            return \"rgba(255, 255, 0, 0.2)\"\n        }\n        else {\n            return \"rgba(0, 128, 0, 0.2)\"\n        }\n    }\n\n    function onChartChange(input) {\n        return {\n            type: 'radar',\n            data: {\n                //labels: coverage.keys,\n                labels: Object.keys(coverage),\n                datasets: [{\n                    label: \"Student A\",\n                    backgroundColor: colorLimit(input),\n                    data: Object.values(coverage)\n                }]\n            },\n            options: {\n                scale: {\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                        display: false\n                    }\n                }\n            }\n        };\n    }\n}\n\nexport default Radar;\n"]},"metadata":{},"sourceType":"module"}